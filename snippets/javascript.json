{
  "Compose Routes": {
    "prefix": "gcr",
    "body": [
      "import { composeRoutes } from \"@gaman/core\";",
      "",
      "export default composeRoutes((route) => {",
      "  $1",
      "});"
    ],
    "description": "composeRoutes tidak otomatis di register ke data routes jadi anda harus set manual ke index.ts"
  },
  "Auto Compose Routes": {
    "prefix": "gacr",
    "body": [
      "import { autoComposeRoutes } from \"@gaman/core\";",
      "",
      "export default autoComposeRoutes((route) => {",
      "  $1",
      "});"
    ],
    "description": "autoComposeRoutes routes otomatis ke register ke data routes"
  },
  "Compose Controller": {
    "prefix": "gcc",
    "body": [
      "import { composeController } from \"@gaman/core\";",
      "",
      "export default composeController(() => ({",
      "  $1",
      "}));"
    ],
    "description": "Membuat controller gaman"
  },
  "Compose Middleware": {
    "prefix": "gcm",
    "body": [
      "import { composeMiddleware } from \"@gaman/core\";",
      "",
      "export default composeMiddleware((ctx, next) => {",
      "  $1",
      "  return next();",
      "});"
    ],
    "description": "composeMiddleware tidak otomatis di register ke data middleware jadi anda harus set manual ke index.ts atau ke spesifik routes"
  },
  "Auto Compose Middleware": {
    "prefix": "gacm",
    "body": [
      "import { autoComposeMiddleware } from \"@gaman/core\";",
      "",
      "export default autoComposeMiddleware((ctx, next) => {",
      "  $1",
      "  return next();",
      "});"
    ],
    "description": "autoComposeMiddleware middleware otomatis ke register ke data middleware"
  },
  "Compose Service": {
    "prefix": "gcs",
    "body": [
      "import { composeService } from \"@gaman/core\";",
      "",
      "export const ${TM_FILENAME_BASE} = composeService(($1) => ({",
      "  HelloWorld(): string {",
      "    return \"$2\";",
      "  },",
      "}));",
      "",
      "export type ${TM_FILENAME_BASE}Type = ReturnType<typeof ${TM_FILENAME_BASE}>;"
    ],
    "description": "composeService is a utility function for creating application controllers."
  }
}
